// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId    String     @id @unique
  firstName String
  lastName  String
  email     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  documents Document[]
}

model Workspaces {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  ownerId   String
  isDefault Boolean  @default(false)
}

// fine-tuned AI models
model ContentModel {
  id          Int         @id @default(autoincrement())
  name        String
  displayName String
  description String
  position    Int?        @default(0)
  rules       Json?       @default("{}")
  active      Boolean     @default(true)
  parameters  Parameter[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
  documents   Document[]
}

model Parameter {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  displayLabel  String
  required      Boolean        @default(false)
  rules         Json?          @default("{}")
  placeholder   String?
  displayType   DisplayType    @default(TEXT)
  options       Json?          @default("[]")
  position      Int?           @default(0)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now())
  contentModels ContentModel[]
}

enum DisplayType {
  TEXT
  TEXTAREA
  SELECT
  RADIO
  CHECKBOX
}

model Document {
  id             Int          @id @default(autoincrement())
  name           String
  displayName    String
  savedVariants  Json?        @default("[]")
  savedResponses Json?        @default("[]")
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now())
  contentModelId Int
  contentModel   ContentModel @relation(fields: [contentModelId], references: [id])
  user           User         @relation(fields: [userId], references: [userId])
  userId         String
}
